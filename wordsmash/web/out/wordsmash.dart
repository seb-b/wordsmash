// Auto-generated from wordsmash.html.
// DO NOT EDIT.

library wordsmash_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/web_ui.dart';
import 'dart:json';


// Original code


final __changes = new __observe.Observable();

String __$word = "help";
String get word {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'word');
  }
  return __$word;
}
set word(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'word',
        __$word, value);
  }
  __$word = value;
}
String __$sentence;
String get sentence {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'sentence');
  }
  return __$sentence;
}
set sentence(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'sentence',
        __$sentence, value);
  }
  __$sentence = value;
}
String __$definition;
String get definition {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'definition');
  }
  return __$definition;
}
set definition(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'definition',
        __$definition, value);
  }
  __$definition = value;
}


void main() {
  getWord();
}

void getWord()
{
  String url = "http://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=false&minCorpusCount=0&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=9426b5f9c67e03853f5410a188e06bc4136900201e3fd92eb";
  var request = HttpRequest.getString(url).then(response);
}

void getPropernoun()
{
  String url = "http://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=false&includePartOfSpeech=proper-noun&minCorpusCount=0&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=9426b5f9c67e03853f5410a188e06bc4136900201e3fd92eb";
  var request = HttpRequest.getString(url).then(response);
}

void response(String response)
{
  Map data = parse(response);
  word = data["word"];
  loadWordDefinition(word);
}

void loadWordDefinition(String word) {
  var url = "http://api.pearson.com/v2/dictionaries/entries?headword="+word+"&apikey=9b7305c0523c3902ec01b44e5a5c53ad";

  // call the web server asynchronously
  var request = HttpRequest.getString(url).then(onDataLoaded);
}

void onDataLoaded(String response) {
  Map data = parse(response);
  if(data["results"] == 0)
  {
    print("Word not found");
    getWord();
    
  }
  
  else
  {
    definition = data["results"][4]["senses"][0]["definition"].toString();
  }
}
void newPage()
{
  if(sentence != null && sentence.indexOf(word) != -1)
  {
    query("#new-page-message").text = "All gucci";
  }else
  {
    query("#new-page-message").text = "You didn't use your word, dingus";
  }
}

// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  var __e1, __e2, __e3, __e4, __e6;
  var __t = new autogenerated.Template(__root);
  __e1 = __root.nodes[3].nodes[1];
  var __binding0 = __t.contentBind(() => word, false);
  __e1.nodes.addAll([new autogenerated.Text('Your word is: '),
      __binding0]);
  __e2 = __root.nodes[3].nodes[3];
  __t.listen(__e2.onClick, ($event) { getWord(); });
  __e3 = __root.nodes[7];
  __t.listen(__e3.onInput, ($event) { sentence = __e3.value; });
  __t.oneWayBind(() => sentence, (e) { if (__e3.value != e) __e3.value = e; }, false, false);
  __e4 = __root.nodes[9];
  __t.listen(__e4.onClick, ($event) { newPage(); });
  __e6 = __root.nodes[13];
  var __binding5 = __t.contentBind(() => definition, false);
  __e6.nodes.add(__binding5);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=wordsmash.dart.map