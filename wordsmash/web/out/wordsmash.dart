// Auto-generated from wordsmash.html.
// DO NOT EDIT.

library wordsmash_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'dart:html';
import 'package:web_ui/web_ui.dart';
import 'dart:json';
import 'package:js/js.dart' as js;
import 'dart:math';


// Original code


final __changes = new __observe.Observable();

String __$displayWord = "loading";
String get displayWord {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'displayWord');
  }
  return __$displayWord;
}
set displayWord(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'displayWord',
        __$displayWord, value);
  }
  __$displayWord = value;
}
String __$sentence;
String get sentence {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'sentence');
  }
  return __$sentence;
}
set sentence(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'sentence',
        __$sentence, value);
  }
  __$sentence = value;
}
String __$definition = "loading";
String get definition {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'definition');
  }
  return __$definition;
}
set definition(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'definition',
        __$definition, value);
  }
  __$definition = value;
}
int __$pageNumber = 1;
int get pageNumber {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'pageNumber');
  }
  return __$pageNumber;
}
set pageNumber(int value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'pageNumber',
        __$pageNumber, value);
  }
  __$pageNumber = value;
}

String word;
String picUrl;

List pages = new List();
bool newWord = true;

void main() {
  getWord();
}

void getWord()
{
  if(newWord)
  {
    displayWord = "loading";
    definition = "loading";
    String url = "http://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=false&minCorpusCount=0&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=9426b5f9c67e03853f5410a188e06bc4136900201e3fd92eb";
    var request = HttpRequest.getString(url).then(response);
  }
  newWord = true;
}

void getPropernoun()
{
  String url = "http://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=false&includePartOfSpeech=proper-noun&minCorpusCount=0&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=9426b5f9c67e03853f5410a188e06bc4136900201e3fd92eb";
  var request = HttpRequest.getString(url).then(response);
}

void response(String response)
{
  Map data = parse(response);
  word = data["word"];
  loadWordDefinition(word);
}

void loadWordDefinition(String word) {
  var url = "http://api.pearson.com/v2/dictionaries/entries?headword="+word+"&apikey=9b7305c0523c3902ec01b44e5a5c53ad";

  // call the web server asynchronously
  var request = HttpRequest.getString(url).then(onDataLoaded);
}

void onDataLoaded(String response) {
  Map data = parse(response);
  if(data["count"] == 0)
  {
    print("Word not found: " + word);
    int lastIndex = word.lastIndexOf("s");
    if(lastIndex != -1 && lastIndex == word.length -1)
    {
      word = word.substring(0, word.length -1);
      loadWordDefinition(word);
    }else
    {
      getWord(); 
    }
   
  }
  
  else
  {
    //TODO: multiple definitions, other info
    try{
      List results = data["results"];
      var firstResult = results[0];
      var senses = firstResult["senses"];
      definition = senses[0]["definition"];
      displayWord = word;
      print("found a def for: " + word);
    if(definition == null)
    {
      getWord();
    }
    } catch(e)
    {
      getWord();
    }
    
  }
}
void newPage()
{
  if(sentence != null && sentence.indexOf(word) != -1)
  {
    query("#new-page-message").text = "";
    save();
  }else
  {
    query("#new-page-message").text = "You didn't use your word, dingus";
  }
}

void getGoogleImage()
{ 
  query("#google-pic").src = "resources/images/loading.gif";
  js.context.handler = new js.Callback.once(display);  
  
  var script = new ScriptElement();
  script.src = "http://ajax.googleapis.com/ajax/services/search/images?v=1.0&rsz=8&q="+word+"&callback=handler";
  document.body.nodes.add(script);
}

void display(var data)
{
  var response = data.responseData;
  var results = response.results;
  var rng = new Random();
  int index = rng.nextInt(results.length);
  var firstResult = results[index];
  picUrl = firstResult.unescapedUrl;
  query("#google-pic").src = picUrl;
}

void save()
{
 Page page = new Page(sentence, word, definition, picUrl);
 print(page);
 pages.add(page);
 pageNumber++;
 getWord();
 sentence = null;
 definition = "loading";
 query("#google-pic").src = "nothing";
}

void previousPage()
{
  if(pageNumber == 1)
  {
    return;
  }
  pageNumber--;
  int index = pageNumber - 1;
  Page page = pages[index];
  pages.removeAt(index);
  
  sentence = page.sentence;
  word = page.word;
  definition = page.definition;
  picUrl = page.picUrl;
  query("#google-pic").src = picUrl;
  newWord = false;
}

class Page
{
  String sentence;
  String word;
  String definition;
  String picUrl;
  
  Page(this.sentence, this.word, this.definition, this.picUrl);
}

// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  var __e1, __e10, __e2, __e4, __e6, __e7, __e8, __e9;
  var __t = new autogenerated.Template(__root);
  __e1 = __root.nodes[1].nodes[3].nodes[1];
  var __binding0 = __t.contentBind(() => displayWord, false);
  __e1.nodes.addAll([new autogenerated.Text('Your word is: '),
      __binding0]);
  __e2 = __root.nodes[1].nodes[3].nodes[3];
  __t.listen(__e2.onClick, ($event) { getWord(); });
  __e4 = __root.nodes[1].nodes[3].nodes[5];
  var __binding3 = __t.contentBind(() => pageNumber, false);
  __e4.nodes.addAll([new autogenerated.Text('page '),
      __binding3]);
  __e6 = __root.nodes[1].nodes[5];
  var __binding5 = __t.contentBind(() => definition, false);
  __e6.nodes.add(__binding5);
  __e7 = __root.nodes[1].nodes[9];
  __t.listen(__e7.onClick, ($event) { previousPage(); });
  __e8 = __root.nodes[1].nodes[11];
  __t.listen(__e8.onInput, ($event) { sentence = __e8.value; });
  __t.oneWayBind(() => sentence, (e) { if (__e8.value != e) __e8.value = e; }, false, false);
  __e9 = __root.nodes[1].nodes[13];
  __t.listen(__e9.onClick, ($event) { newPage(); });
  __e10 = __root.nodes[1].nodes[17];
  __t.listen(__e10.onClick, ($event) { getGoogleImage(); });
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=wordsmash.dart.map